	<?php /* _____DisplayField */ 
	if (!$this->model instanceof Garp_Spawn_Model_Abstract):
		throw new Exception('This partial requires a Garp_Spawn_Model_Base instance as $model parameter.');
	endif;
	
	$model 					= $this->model;

	$nameIsMandatory = function() use ($model) {
		$nameFieldSet = $model->fields->getFields('name', 'name');
		if (!$nameFieldSet) {
			return false;
		}
		
		$nameField = current($nameFieldSet);
		return $nameField->required;
	};
	
	$hasMandatoryName = $nameIsMandatory();
	
	$hasFirstAndLastName	= $this->spawnJs()->modelHasFirstAndLastName($model);

	$printFieldGetter		= function($fieldName) use ($model) {
		$defaultLanguage	= Garp_I18n::getDefaultLocale();
		$isMultilingual		= $model->fields->getField($fieldName)->isMultilingual();
		$postfix			= $isMultilingual ? '.' . $defaultLanguage : '';
 		$getter				= "rec.get('{$fieldName}')" . $postfix;

		return $getter;
	};
	
	$printListFieldGetters	= function() use ($model, $printFieldGetter) {
		$getters = array();
		foreach ($model->fields->listFieldNames as $fieldName) {
			$getters[] = $printFieldGetter($fieldName);
		}
		
		return implode(', ', $getters);
	} 
	
	?>
	displayFieldRenderer: function(rec){
	<?php if ($hasFirstAndLastName): ?>
		return rec.get('first_name') ? (rec.get('first_name') + (rec.get('last_name_prefix') ? ' ' + rec.get('last_name_prefix') + ' ' : ' ') + (rec.get('last_name') || '')) : __('New');
	<?php elseif ($hasMandatoryName): ?>
		return <?php echo $printFieldGetter('name') ?> || __('New');
	<?php else: ?>
		var out = [<?php echo $printListFieldGetters() ?>].join(" ").replace("  ", " "); 
		if (out === ' ') {
			out = __("New");
		}
		return  out;
	<?php endif; ?>
	}