<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="SplHeap" namespace="" name="SplHeap">
  <implements name="Iterator" full="Iterator"/>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Constructs a new empty heap"/>
      <return type="void"/>
    </docblock>
  </constructor>
  <method name="compare" abstract="false" static="false" visibility="protected" final="false">
    <docblock>
      <description compact="Compare elements in order to place them correctly in the heap while sifting up.">Compare value1 with value2.</description>
      <return type="int"/>
    </docblock>
    <parameter name="value1" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="value2" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Counts the number of elements in the heap."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current node pointed by the iterator"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="extract" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Extracts a node from top of the heap and sift up."/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="insert" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Inserts an element in the heap by sifting it up."/>
      <return type="void"/>
    </docblock>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="isEmpty" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks whether the heap is empty."/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current node index"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move to the next node"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="recoverFromCorruption" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Recover from the corrupted state and allow further actions on the heap."/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind iterator back to the start (no-op)"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="top" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Peeks at the node from the top of the heap"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the heap contains more nodes"/>
      <return type="bool"/>
    </docblock>
  </method>
</class>
