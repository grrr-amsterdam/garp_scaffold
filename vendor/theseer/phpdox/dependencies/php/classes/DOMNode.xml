<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="DOMNode" namespace="" name="DOMNode">
  <member name="nodeName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the most accurate name for the current node type"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="nodeValue" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The value of this node, depending on its type"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="nodeType" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Gets the type of the node. One of the predefined XML_xxx_NODE constants"/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="parentNode" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The parent of this node"/>
      <var type="DOMNode"/>
    </docblock>
  </member>
  <member name="childNodes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       A DOMNodeList that contains all&#10;       children of this node. If there are no children, this is an empty&#10;       DOMNodeList.&#10;      "/>
      <var type="DOMNodeList"/>
    </docblock>
  </member>
  <member name="firstChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       The first child of this node. If there is no such node, this&#10;       returns NULL.&#10;      "/>
      <var type="DOMNode"/>
    </docblock>
  </member>
  <member name="lastChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The last child of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
  <member name="previousSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       The node immediately preceding this node. If there is no such&#10;       node, this returns NULL.&#10;      "/>
      <var type="DOMNode"/>
    </docblock>
  </member>
  <member name="nextSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       The node immediately following this node. If there is no such&#10;       node, this returns NULL.&#10;      "/>
      <var type="DOMNode"/>
    </docblock>
  </member>
  <member name="attributes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       A DOMNamedNodeMap containing the&#10;       attributes of this node (if it is a DOMElement)&#10;       or NULL otherwise.&#10;      "/>
      <var type="DOMNamedNodeMap"/>
    </docblock>
  </member>
  <member name="ownerDocument" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The DOMDocument object associated with this node."/>
      <var type="DOMDocument"/>
    </docblock>
  </member>
  <member name="namespaceURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace URI of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="prefix" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace prefix of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="localName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the local part of the qualified name of this node."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="baseURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       The absolute base URI of this node or NULL if the implementation&#10;       wasn't able to obtain an absolute URI.&#10;      "/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="textContent" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="This attribute returns the text content of this node and its descendants."/>
      <var type="string"/>
    </docblock>
  </member>
  <method name="appendChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Adds new child at the end of the children&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
  <method name="C14N" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Canonicalize nodes to a string"/>
      <return type="string"/>
    </docblock>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
  <method name="C14NFile" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Canonicalize nodes to a file"/>
      <return type="int"/>
    </docblock>
    <parameter name="uri" optional="false" byreference="false" type="string"/>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
  <method name="cloneNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Clones a node&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="deep" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="getLineNo" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get line number for a node"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getNodePath" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get an XPath for a node"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="hasAttributes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if node has attributes&#10;  "/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="hasChildNodes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if node has children&#10;  "/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="insertBefore" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Adds a new child before a reference node&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="refnode" optional="true" byreference="false" type="object" class="DOMNode"/>
  </method>
  <method name="isDefaultNamespace" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if the specified namespaceURI is the default namespace or not"/>
      <return type="bool"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
  <method name="isSameNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Indicates if two nodes are the same node&#10;  "/>
      <return type="bool"/>
    </docblock>
    <parameter name="node" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
  <method name="isSupported" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if feature is supported for specified version&#10;  "/>
      <return type="bool"/>
    </docblock>
    <parameter name="feature" optional="false" byreference="false" type="string"/>
    <parameter name="version" optional="false" byreference="false" type="string"/>
  </method>
  <method name="lookupNamespaceURI" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Gets the namespace URI of the node based on the prefix&#10;  "/>
      <return type="string"/>
    </docblock>
    <parameter name="prefix" optional="false" byreference="false" type="string"/>
  </method>
  <method name="lookupPrefix" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Gets the namespace prefix of the node based on the namespace URI&#10;  "/>
      <return type="string"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
  <method name="normalize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Normalizes the node&#10;  "/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="removeChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Removes child from list of children&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
  <method name="replaceChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Replaces a child&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
</class>
