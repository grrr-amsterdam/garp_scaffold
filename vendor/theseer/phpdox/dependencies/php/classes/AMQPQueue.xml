<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="AMQPQueue" namespace="" name="AMQPQueue">
  <method name="ack" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Acknowledge the receipt of a message"/>
      <return type="bool"/>
    </docblock>
    <parameter name="delivery_tag" optional="false" byreference="false" type="int"/>
    <parameter name="flags" optional="true" byreference="false" type="int"/>
  </method>
  <method name="bind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Bind the given queue to a routing key on an exchange."/>
      <return type="bool"/>
    </docblock>
    <parameter name="exchange_name" optional="false" byreference="false" type="string"/>
    <parameter name="routing_key" optional="false" byreference="false" type="string"/>
  </method>
  <method name="cancel" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Cancel a queue binding."/>
      <return type="bool"/>
    </docblock>
    <parameter name="consumer_tag" optional="true" byreference="false" type="string"/>
  </method>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Create an instance of an AMQPQueue object"/>
      <return type="void"/>
    </docblock>
    <parameter name="amqp_channel" optional="false" byreference="false" type="object" class="AMQPChannel"/>
  </constructor>
  <method name="consume" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Consume messages from a queue"/>
      <return type="void"/>
    </docblock>
    <parameter name="callback" optional="false" byreference="false" type="object" class="callable"/>
    <parameter name="flags" optional="true" byreference="false" type="int"/>
  </method>
  <method name="declare" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Declare a new queue"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="delete" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Delete a queue and its contents."/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="get" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve the next message from the queue.">Retrieve the next available message from the queue. If no messages are present in the queue, this function will return FALSE immediately. This is a non blocking alternative to the AMQPQueue::consume method.</description>
      <return type="mixed"/>
    </docblock>
    <parameter name="flags" optional="true" byreference="false" type="int"/>
  </method>
  <method name="getArgument" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the argument associated with the given key"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" optional="false" byreference="false" type="string"/>
  </method>
  <method name="getArguments" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get all arguments set on the given queue"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the flag bitmask"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the configured name"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="nack" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Mark a message as explicitly not acknowledged.">Mark the message identified by delivery_tag as explicitly not acknowledged. This method can only be called on messages that have not yet been acknowledged, meaning that messages retrieved with by AMQPQueue::consume and AMQPQueue::get and using the AMQP_AUTOACK flag are not eligible.</description>
      <return type="void"/>
    </docblock>
    <parameter name="delivery_tag" optional="false" byreference="false" type="string"/>
    <parameter name="flags" optional="true" byreference="false" type="string"/>
  </method>
  <method name="purge" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Purge the contents of a queue"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="setArgument" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set the value for the given key"/>
      <return type="void"/>
    </docblock>
    <parameter name="key" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="setArguments" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set all arguments on the queue"/>
      <return type="void"/>
    </docblock>
    <parameter name="arguments" optional="false" byreference="false" type="object" class="array"/>
  </method>
  <method name="setFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set the queue flags"/>
      <return type="void"/>
    </docblock>
    <parameter name="flags" optional="false" byreference="false" type="int"/>
  </method>
  <method name="setName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set the queue name"/>
      <return type="void"/>
    </docblock>
    <parameter name="queue_name" optional="false" byreference="false" type="string"/>
  </method>
  <method name="unbind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unbind the queue from a routing key."/>
      <return type="bool"/>
    </docblock>
    <parameter name="exchange_name" optional="false" byreference="false" type="string"/>
    <parameter name="routing_key" optional="false" byreference="false" type="string"/>
  </method>
</class>
