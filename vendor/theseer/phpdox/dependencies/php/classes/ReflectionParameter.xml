<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="ReflectionParameter" namespace="" name="ReflectionParameter">
  <implements name="Reflector" full="Reflector"/>
  <member name="name" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="&#10;       Name of the parameter. Read-only, throws&#10;       ReflectionException in attempt to write.&#10;      "/>
    </docblock>
  </member>
  <method name="allowsNull" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if null is allowed"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="canBePassedByValue" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns whether this parameter can be passed by value"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="__clone" abstract="false" static="false" final="true">
    <docblock>
      <description compact="Clone"/>
      <return type="void"/>
    </docblock>
  </method>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct"/>
      <return type="void"/>
    </docblock>
    <parameter name="function" optional="false" byreference="false" type="string"/>
    <parameter name="parameter" optional="false" byreference="false" type="string"/>
  </constructor>
  <method name="export" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Exports"/>
      <return type="string"/>
    </docblock>
    <parameter name="function" optional="false" byreference="false" type="string"/>
    <parameter name="parameter" optional="false" byreference="false" type="string"/>
    <parameter name="return" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="getClass" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get class"/>
      <return type="ReflectionClass"/>
    </docblock>
  </method>
  <method name="getDeclaringClass" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets declaring class"/>
      <return type="ReflectionClass"/>
    </docblock>
  </method>
  <method name="getDeclaringFunction" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets declaring function"/>
      <return type="ReflectionFunction"/>
    </docblock>
  </method>
  <method name="getDefaultValue" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets default parameter value"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="getDefaultValueConstantName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the default value's constant name if default value is constant or null"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets parameter name"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPosition" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets parameter position"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="isArray" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if parameter expects an array"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isCallable" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns whether parameter MUST be callable"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isDefaultValueAvailable" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if a default value is available"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isDefaultValueConstant" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns whether the default value of this parameter is constant"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isOptional" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if optional"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isPassedByReference" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if passed by reference"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="To string"/>
      <return type="string"/>
    </docblock>
  </method>
</class>
