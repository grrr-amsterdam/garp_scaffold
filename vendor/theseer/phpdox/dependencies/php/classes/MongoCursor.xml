<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="MongoCursor" namespace="" name="MongoCursor">
  <implements name="Iterator" full="Iterator"/>
  <member name="slaveOkay" static="false">
    <default>null</default>
    <docblock>
      <description compact="&#10;       If the query should have the &quot;slaveOkay&quot; flag set, which allows reads on&#10;       the secondary (secondaries are, by default, just for backup and not&#10;       queried). Can be overridden with MongoCursor::slaveOkay.&#10;      ">
       If the query should have the "slaveOkay" flag set, which allows reads on
       the secondary (secondaries are, by default, just for backup and not
       queried). Can be overridden with MongoCursor::slaveOkay.
      </description>
      <var type="boolean"/>
    </docblock>
  </member>
  <member name="timeout" static="false">
    <default>null</default>
    <docblock>
      <description compact="&#10;       Set timeout in milliseconds for all database responses.  To wait forever,&#10;       use -1. Can be overridden with MongoCursor::timeout.&#10;       This does not cause the MongoDB server to cancel the operation, it just&#10;       causes the driver to stop waiting for a response and throw a&#10;       MongoCursorTimeoutException.&#10;      "/>
      <var type="integer"/>
    </docblock>
  </member>
  <method name="addOption" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Adds a top-level key/value pair to a query">This is an advanced function and should not be used unless you know what you're doing.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="key" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="awaitData" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets whether this cursor will wait for a while for a tailable cursor to return more data"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="wait" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="batchSize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Limits the number of elements returned in one batch."/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="batchSize" optional="false" byreference="false" type="int"/>
  </method>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Create a new cursor"/>
      <return type="void"/>
    </docblock>
    <parameter name="connection" optional="false" byreference="false" type="object" class="MongoClient"/>
    <parameter name="ns" optional="false" byreference="false" type="string"/>
    <parameter name="query" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="fields" optional="true" byreference="false" type="object" class="array"/>
  </constructor>
  <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Counts the number of results for this query"/>
      <return type="int"/>
    </docblock>
    <parameter name="foundOnly" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the current element"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="dead" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if there are documents that have not been sent yet from the database for this cursor">The database sends responses in batches of documents, up to 4MB of documents per response. This method checks if the database has more batches or if the result set has been exhausted.</description>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="doQuery" abstract="false" static="false" visibility="protected" final="false">
    <docblock>
      <description compact="Execute the query.">Please do not use me.</description>
      <return type="void"/>
    </docblock>
  </method>
  <method name="explain" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return an explanation of the query, often useful for optimization and debugging"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="fields" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the fields for a query">Fields are specified by "fieldname" : bool. TRUE indicates that a field should be returned, FALSE indicates that it should not be returned. You can also use 1 and 0 instead of TRUE and FALSE.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="f" optional="false" byreference="false" type="object" class="array"/>
  </method>
  <method name="getNext" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return the next object to which this cursor points, and advance the cursor"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getReadPreference" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the read preference for this query"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="hasNext" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if there are any more elements in this cursor"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="hint" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gives the database a hint about the query"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="immortal" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets whether this cursor will timeout">After remaining idle on the server for some amount of time, cursors, by default, "die." This is generally the behavior one wants. The database cleans up a cursor once all of its results have been sent to the client, but if the client doesn't request all of the results, the cursor will languish there, taking up resources. Thus, after a few minutes, the cursor "times out" and the database assumes the client has gotten everything it needs and cleans up its the cursor's resources.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="liveForever" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="info" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the query, fields, limit, and skip for this cursor"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the current result's _id"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="limit" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Limits the number of results returned"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="num" optional="false" byreference="false" type="int"/>
  </method>
  <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Advances the cursor to the next result"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="partial" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="If this query should fetch partial results from mongos if a shard is down">This option allows mongos to send partial query results if a shard is unreachable. This is only applicable when running a sharded MongoDB cluster and connecting to a mongos.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="okay" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="reset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Clears the cursor"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the cursor to the beginning of the result set"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="setFlag" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets arbitrary flags in case there is no method available the specific flag"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="flag" optional="false" byreference="false" type="int"/>
    <parameter name="set" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="setReadPreference" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set the read preference for this query"/>
      <return type="bool"/>
    </docblock>
    <parameter name="read_preference" optional="false" byreference="false" type="string"/>
    <parameter name="tags" optional="true" byreference="false" type="object" class="array"/>
  </method>
  <method name="skip" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Skips a number of results"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="num" optional="false" byreference="false" type="int"/>
  </method>
  <method name="slaveOkay" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets whether this query can be done on a secondary">Calling this will make the driver route reads to secondaries if: You are using a replica set and You created a MongoClient instance using the option "replicaSet" =&gt; "setName" and There is a healthy secondary that can be reached by the driver. You can check which server was used for this query by calling MongoCursor::info after running the query. It's server field will show which server the query was sent to.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="okay" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="snapshot" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Use snapshot mode for the query">Use snapshot mode for the query. Snapshot mode assures no duplicates are returned, or objects missed, which were present at both the start and end of the query's execution (if an object is new during the query, or deleted during the query, it may or may not be returned, even with snapshot mode).</description>
      <return type="MongoCursor"/>
    </docblock>
  </method>
  <method name="sort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sorts the results by given fields"/>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="fields" optional="false" byreference="false" type="object" class="array"/>
  </method>
  <method name="tailable" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets whether this cursor will be left open after fetching the last results">Mongo has a feature known as tailable cursors which are similar to the Unix "tail -f" command.</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="tail" optional="true" byreference="false" type="object" class="bool"/>
  </method>
  <method name="timeout" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets a client-side timeout for this query">A timeout can be set at any time and will affect subsequent queries on the cursor, including fetching more results from the database. For example, to wait forever for an initial response but timeout after 100 ms for subsequent results, one could say: &lt;?php $cursor = $collection-&gt;find(); // $cursor-&gt;hasNext() executes the query. No timeout has been set, so the // program will wait as long as necessary for a response. while ($cursor-&gt;hasNext()) { $cursor-&gt;timeout(100); // now the timeout has been set, so if the cursor needs to get more results // from the database, it will only wait 100 ms for the database's reply try { print_r($cursor-&gt;getNext()); } catch(MongoCursorTimeoutException $e) { echo "query took too long!"; } } ?&gt;</description>
      <return type="MongoCursor"/>
    </docblock>
    <parameter name="ms" optional="false" byreference="false" type="int"/>
  </method>
  <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if the cursor is reading a valid result."/>
      <return type="bool"/>
    </docblock>
  </method>
</class>
