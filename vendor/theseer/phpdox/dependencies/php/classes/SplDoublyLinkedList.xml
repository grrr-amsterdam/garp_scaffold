<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="SplDoublyLinkedList" namespace="" name="SplDoublyLinkedList">
  <implements name="Iterator" full="Iterator"/>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Constructs a new doubly linked list"/>
      <return type="void"/>
    </docblock>
  </constructor>
  <method name="bottom" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Peeks at the node from the beginning of the doubly linked list"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Counts the number of elements in the doubly linked list."/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current array entry"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="getIteratorMode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the mode of iteration"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="isEmpty" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks whether the doubly linked list is empty."/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Return current node index"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move to next entry"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns whether the requested $index exists"/>
      <return type="bool"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the value at the specified $index"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the value at the specified $index to $newval"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="newval" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unsets the value at the specified $index"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="pop" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Pops a node from the end of the doubly linked list"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="prev" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move to previous entry"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="push" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Pushes an element at the end of the doubly linked list"/>
      <return type="void"/>
    </docblock>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind iterator back to the start"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="serialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Serializes the storage"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setIteratorMode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the mode of iteration"/>
      <return type="void"/>
    </docblock>
    <parameter name="mode" optional="false" byreference="false" type="int"/>
  </method>
  <method name="shift" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Shifts a node from the beginning of the doubly linked list"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="top" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Peeks at the node from the end of the doubly linked list"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="unserialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unserializes the storage"/>
      <return type="void"/>
    </docblock>
    <parameter name="serialized" optional="false" byreference="false" type="string"/>
  </method>
  <method name="unshift" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Prepends the doubly linked list with an element"/>
      <return type="void"/>
    </docblock>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the doubly linked list contains more nodes"/>
      <return type="bool"/>
    </docblock>
  </method>
</class>
