/*!
 _________   ________   ________   _______-+-
/\* ______\ /\* ____ \ /\* ____ \ /\* ____ \
\ \ \_____/ \ \ \__/\ \\ \ \__/\ \\ \ \__/\ \
 \ \ \   ____\ \ \_\_\ \\ \ \_\_\ \\ \ \_\_\ \
  \ \ \ /\__ \\ \  __  _\\ \  __  _\\ \  __  _\
   \ \ \_/_/\ \\ \ \/\ \/_\ \ \/\ \/_\ \ \/\ \/_
	\ \________\\ \_\ \___\\ \_\ \___\\ \_\ \___\
	 \/________/ \/_/\/___/ \/_/\/___/ \/_/\/___/.nl -->

      Author: Grrr.nl
*/

/* ==========================================================================
   CONTENTS
   ==========================================================================

 * Imports.............Import external stylesheets
 * Primary styles......Non module styles  (e.g. basic typography)
 * Specific styles.....Common styles used througout the site
 * Layout..............General layout stuff
 * Modules.............Modules based on SMACSS
 * Helpers (margin)....Non semantic margin-helpers (like pulling, adding more margin, etc...)
 * Helpers (color).....Color classes for direct painting
 * Helpers (other).....Non-semantic helper classes (eg. clearfix)
 * Print styles........Styles for printing
 */

/* import order is important */

/* ==========================================================================
   mixins and functions
   ========================================================================== */

/**
 * For converting pixels to ems
 * Based on a 10px font-size on the html
 * Usage:
 * div { width: pxToEm(300); }
 * Returns:
 * div { width: 30em; }
 */

/**
 * Color mixins (other than lighten or darken)
*/

/**
 * Responsive padding (include units, so: 20px, ...)
 * Usage:
 * .content { @include responsive-padding($margin, $margin*2, $margin, $margin*1.5): }
 *
 * author: Koen
 */

/**
 * For image replacement
 */

/**
 * For font-sizing in rem
 * Usage:
 * html { font-size: 62.5%; }
 * p { @include font-size(16); }
 */

/**
 * For using breakpoints
 * Usage:
 * div { width: 60px;
 *	@include breakpoint-min($small) { width: 80px; }
 * }
 *
 * Pass true as a second parameter to toggle high dpi screens
 */

/**
 * For targetting high dpi screens
 * Usage:
 * div {
 *	width: 30px; height: 30px; background: url('img.jpg');
 *	@include high-dpi() { background: url('image-2x.jpg'); @include background-size(30px 30px); }
 * }
 */

/**
 * For targeting old-IE
 * Usage:
 * div {
 *  @include old-ie { zoom: 1; }
 * }
 */

/**
 * Calculate fluid ratio based on two dimensions (width/height)
 * @see http://voormedia.com/blog/2012/11/responsive-background-images-with-fixed-or-fluid-aspect-ratios
 * Usage:
 * .header { @include fluid-ratio(800px 200px, 300px 150px); background-image: url('img/branding.png'); }
 */

/* ==========================================================================
   variables
   ========================================================================== */

/* chrome on windows fix */

@media screen and (-webkit-min-device-pixel-ratio: 0) and (min-width: 1200px) {

}

/* ==========================================================================
	Grunt icon template. Generates _icons.scss
	Author: Koen | grrr.nl

	(original can be found in node_modules/grunt-webfont/tasks/templates/bem.css)
   ========================================================================== */

@font-face {
  font-family: "icons";
  src: url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.eot");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "icons";
  src: url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.eot");
  src: url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.eot?#iefix") format("embedded-opentype"), url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.woff") format("woff"), url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.ttf") format("truetype"), url("../fonts/icons/icons-3a005f1e322b2b2823223aab9d8035e7.svg?#icons") format("svg");
  font-weight: normal;
  font-style: normal;
}

.icon-arrow-next:before,
.icon-arrow-prev:before {
  font-family: "icons";
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-arrow-next:before {
  content: "\f100";
}

.icon-arrow-prev:before {
  content: "\f101";
}

/* ==|== html5 boilerplate normalize ======================================== */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

audio:not([controls]) {
  display: none;
}

[hidden] {
  display: none;
}

html {
  overflow-y: scroll;
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

blockquote {
  margin: 1em;
}

dfn {
  font-style: italic;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

ins {
  background: #ffff99;
  color: black;
  text-decoration: none;
}

mark {
  background: yellow;
  color: black;
  font-style: italic;
  font-weight: bold;
}

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  _font-family: 'courier new', monospace;
  font-size: 1em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

q {
  quotes: none;
}

q:before,
q:after {
  content: "";
  content: none;
}

small {
  font-size: 85%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

address {
  font-style: normal;
}

/* style color on img differently to easily spot alt-text and thus a missing image */

img {
  border: 0;
  color: #cccccc;
  -ms-interpolation-mode: bicubic;
  vertical-align: middle;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

label {
  cursor: pointer;
}

legend {
  border: 0;
  *margin-left: -7px;
  padding: 0;
  white-space: normal;
}

button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle;
}

button,
input {
  line-height: normal;
  *overflow: visible;
}

table button,
table input {
  *overflow: auto;
}

/* @see http://24ways.org/2011/subliminal-user-experience for the "drag" and "select" specifics */

button,
.btn,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  -moz-user-select: -moz-none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -moz-user-drag: -moz-none;
  -webkit-user-drag: none;
  user-drag: none;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
}

button[disabled],
input[disabled] {
  cursor: default;
}

input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
  *width: 13px;
  *height: 13px;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td {
  vertical-align: top;
}

/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/

/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */

/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/

/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */

/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/

/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */

/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */

/**
 * Set the spacing between your grid items.
 */

/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */

/**
 * Would you like push and pull classes enabled?
 */

/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */

/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */

/*
$breakpoints: (
    'palm' '(max-width: 480px)',
    'lap' '(min-width: 481px) and (max-width: 1023px)',
    'portable' '(max-width: 1023px)',
    'desk' '(min-width: 1024px)'
)!default;
*/

/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */

/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */

/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */

/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */

/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/

/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */

.grid {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -0px;
  /* [3] */
}

/**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */

.grid__item {
  display: inline-block;
  /* [1] */
  padding-left: 0px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  /* [5] */
  -moz-box-sizing: border-box;
  /* [5] */
  box-sizing: border-box;
  /* [5] */
}

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */

.grid--rev {
  direction: rtl;
  text-align: left;
}

.grid--rev > .grid__item {
  direction: ltr;
  text-align: left;
}

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */

.grid--full {
  margin-left: 0;
}

.grid--full > .grid__item {
  padding-left: 0;
}

/**
 * Align the entire grid to the right. Extends `.grid`.
 */

.grid--right {
  text-align: right;
}

.grid--right > .grid__item {
  text-align: left;
}

/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */

.grid--center {
  text-align: center;
}

.grid--center > .grid__item {
  text-align: left;
}

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */

.grid--middle > .grid__item {
  vertical-align: middle;
}

.grid--bottom > .grid__item {
  vertical-align: bottom;
}

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */

.grid--narrow {
  margin-left: -0px;
}

.grid--narrow > .grid__item {
  padding-left: 0px;
}

/**
 * Create grids with wider gutters. Extends `.grid`.
 */

.grid--wide {
  margin-left: -0px;
}

.grid--wide > .grid__item {
  padding-left: 0px;
}

/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/

/**
 * Create our width classes, prefixed by the specified namespace.
 */

/**
 * Our regular, non-responsive width classes.
 */

/**
     * Whole
     */

.one-whole {
  width: 100%;
}

/**
     * Halves
     */

.one-half,
.two-quarters,
.three-sixths,
.four-eighths,
.five-tenths,
.six-twelfths {
  width: 50%;
}

/**
     * Thirds
     */

.one-third,
.two-sixths,
.four-twelfths {
  width: 33.333%;
}

.two-thirds,
.four-sixths,
.eight-twelfths {
  width: 66.666%;
}

/**
     * Quarters
     */

.one-quarter,
.two-eighths,
.three-twelfths {
  width: 25%;
}

.three-quarters,
.six-eighths,
.nine-twelfths {
  width: 75%;
}

/**
     * Fifths
     */

.one-fifth,
.two-tenths {
  width: 20%;
}

.two-fifths,
.four-tenths {
  width: 40%;
}

.three-fifths,
.six-tenths {
  width: 60%;
}

.four-fifths,
.eight-tenths {
  width: 80%;
}

/**
     * Sixths
     */

.one-sixth,
.two-twelfths {
  width: 16.666%;
}

.five-sixths,
.ten-twelfths {
  width: 83.333%;
}

/**
     * Eighths
     */

.one-eighth {
  width: 12.5%;
}

.three-eighths {
  width: 37.5%;
}

.five-eighths {
  width: 62.5%;
}

.seven-eighths {
  width: 87.5%;
}

/**
     * Tenths
     */

.one-tenth {
  width: 10%;
}

.three-tenths {
  width: 30%;
}

.seven-tenths {
  width: 70%;
}

.nine-tenths {
  width: 90%;
}

/**
     * Twelfths
     */

.one-twelfth {
  width: 8.333%;
}

.five-twelfths {
  width: 41.666%;
}

.seven-twelfths {
  width: 58.333%;
}

.eleven-twelfths {
  width: 91.666%;
}

/**
 * Our responsive classes, if we have enabled them.
 */

@media only screen and (max-width: 39.9375em) {
  /**
     * Whole
     */

  /**
     * Halves
     */

  /**
     * Thirds
     */

  /**
     * Quarters
     */

  /**
     * Fifths
     */

  /**
     * Sixths
     */

  /**
     * Eighths
     */

  /**
     * Tenths
     */

  /**
     * Twelfths
     */

  .palm--one-whole {
    width: 100%;
  }

  .palm--one-half,
  .palm--two-quarters,
  .palm--three-sixths,
  .palm--four-eighths,
  .palm--five-tenths,
  .palm--six-twelfths {
    width: 50%;
  }

  .palm--one-third,
  .palm--two-sixths,
  .palm--four-twelfths {
    width: 33.333%;
  }

  .palm--two-thirds,
  .palm--four-sixths,
  .palm--eight-twelfths {
    width: 66.666%;
  }

  .palm--one-quarter,
  .palm--two-eighths,
  .palm--three-twelfths {
    width: 25%;
  }

  .palm--three-quarters,
  .palm--six-eighths,
  .palm--nine-twelfths {
    width: 75%;
  }

  .palm--one-fifth,
  .palm--two-tenths {
    width: 20%;
  }

  .palm--two-fifths,
  .palm--four-tenths {
    width: 40%;
  }

  .palm--three-fifths,
  .palm--six-tenths {
    width: 60%;
  }

  .palm--four-fifths,
  .palm--eight-tenths {
    width: 80%;
  }

  .palm--one-sixth,
  .palm--two-twelfths {
    width: 16.666%;
  }

  .palm--five-sixths,
  .palm--ten-twelfths {
    width: 83.333%;
  }

  .palm--one-eighth {
    width: 12.5%;
  }

  .palm--three-eighths {
    width: 37.5%;
  }

  .palm--five-eighths {
    width: 62.5%;
  }

  .palm--seven-eighths {
    width: 87.5%;
  }

  .palm--one-tenth {
    width: 10%;
  }

  .palm--three-tenths {
    width: 30%;
  }

  .palm--seven-tenths {
    width: 70%;
  }

  .palm--nine-tenths {
    width: 90%;
  }

  .palm--one-twelfth {
    width: 8.333%;
  }

  .palm--five-twelfths {
    width: 41.666%;
  }

  .palm--seven-twelfths {
    width: 58.333%;
  }

  .palm--eleven-twelfths {
    width: 91.666%;
  }
}

@media only screen and (max-width: 63.9375em) {
  /**
     * Whole
     */

  /**
     * Halves
     */

  /**
     * Thirds
     */

  /**
     * Quarters
     */

  /**
     * Fifths
     */

  /**
     * Sixths
     */

  /**
     * Eighths
     */

  /**
     * Tenths
     */

  /**
     * Twelfths
     */

  .lap--one-whole {
    width: 100%;
  }

  .lap--one-half,
  .lap--two-quarters,
  .lap--three-sixths,
  .lap--four-eighths,
  .lap--five-tenths,
  .lap--six-twelfths {
    width: 50%;
  }

  .lap--one-third,
  .lap--two-sixths,
  .lap--four-twelfths {
    width: 33.333%;
  }

  .lap--two-thirds,
  .lap--four-sixths,
  .lap--eight-twelfths {
    width: 66.666%;
  }

  .lap--one-quarter,
  .lap--two-eighths,
  .lap--three-twelfths {
    width: 25%;
  }

  .lap--three-quarters,
  .lap--six-eighths,
  .lap--nine-twelfths {
    width: 75%;
  }

  .lap--one-fifth,
  .lap--two-tenths {
    width: 20%;
  }

  .lap--two-fifths,
  .lap--four-tenths {
    width: 40%;
  }

  .lap--three-fifths,
  .lap--six-tenths {
    width: 60%;
  }

  .lap--four-fifths,
  .lap--eight-tenths {
    width: 80%;
  }

  .lap--one-sixth,
  .lap--two-twelfths {
    width: 16.666%;
  }

  .lap--five-sixths,
  .lap--ten-twelfths {
    width: 83.333%;
  }

  .lap--one-eighth {
    width: 12.5%;
  }

  .lap--three-eighths {
    width: 37.5%;
  }

  .lap--five-eighths {
    width: 62.5%;
  }

  .lap--seven-eighths {
    width: 87.5%;
  }

  .lap--one-tenth {
    width: 10%;
  }

  .lap--three-tenths {
    width: 30%;
  }

  .lap--seven-tenths {
    width: 70%;
  }

  .lap--nine-tenths {
    width: 90%;
  }

  .lap--one-twelfth {
    width: 8.333%;
  }

  .lap--five-twelfths {
    width: 41.666%;
  }

  .lap--seven-twelfths {
    width: 58.333%;
  }

  .lap--eleven-twelfths {
    width: 91.666%;
  }
}

@media only screen and (min-width: 64em) {
  /**
     * Whole
     */

  /**
     * Halves
     */

  /**
     * Thirds
     */

  /**
     * Quarters
     */

  /**
     * Fifths
     */

  /**
     * Sixths
     */

  /**
     * Eighths
     */

  /**
     * Tenths
     */

  /**
     * Twelfths
     */

  .desk--one-whole {
    width: 100%;
  }

  .desk--one-half,
  .desk--two-quarters,
  .desk--three-sixths,
  .desk--four-eighths,
  .desk--five-tenths,
  .desk--six-twelfths {
    width: 50%;
  }

  .desk--one-third,
  .desk--two-sixths,
  .desk--four-twelfths {
    width: 33.333%;
  }

  .desk--two-thirds,
  .desk--four-sixths,
  .desk--eight-twelfths {
    width: 66.666%;
  }

  .desk--one-quarter,
  .desk--two-eighths,
  .desk--three-twelfths {
    width: 25%;
  }

  .desk--three-quarters,
  .desk--six-eighths,
  .desk--nine-twelfths {
    width: 75%;
  }

  .desk--one-fifth,
  .desk--two-tenths {
    width: 20%;
  }

  .desk--two-fifths,
  .desk--four-tenths {
    width: 40%;
  }

  .desk--three-fifths,
  .desk--six-tenths {
    width: 60%;
  }

  .desk--four-fifths,
  .desk--eight-tenths {
    width: 80%;
  }

  .desk--one-sixth,
  .desk--two-twelfths {
    width: 16.666%;
  }

  .desk--five-sixths,
  .desk--ten-twelfths {
    width: 83.333%;
  }

  .desk--one-eighth {
    width: 12.5%;
  }

  .desk--three-eighths {
    width: 37.5%;
  }

  .desk--five-eighths {
    width: 62.5%;
  }

  .desk--seven-eighths {
    width: 87.5%;
  }

  .desk--one-tenth {
    width: 10%;
  }

  .desk--three-tenths {
    width: 30%;
  }

  .desk--seven-tenths {
    width: 70%;
  }

  .desk--nine-tenths {
    width: 90%;
  }

  .desk--one-twelfth {
    width: 8.333%;
  }

  .desk--five-twelfths {
    width: 41.666%;
  }

  .desk--seven-twelfths {
    width: 58.333%;
  }

  .desk--eleven-twelfths {
    width: 91.666%;
  }
}

/*------------------------------------*\
    $PUSH
\*------------------------------------*/

/**
 * Push classes, to move grid items over to the right by certain amounts.
 */

/*------------------------------------*\
    $PULL
\*------------------------------------*/

/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */

/* ==========================================================================
	STYLES (primary)
	========================================================================== */

html {
  font-size: 62.5%;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media only screen and (max-width: 39.9375em) {
  html {
    font-size: 50%;
  }
}

body,
button,
input,
select,
textarea {
  font-family: sans-serif;
  font-size: 16px;
  font-size: 1.6rem;
  color: black;
}

body {
  background: white;
  margin: 0;
}

.unstyled-list,
.nav ul,
.nav ol {
  list-style: none;
  padding-left: 0;
}

a,
a:hover,
a:active {
  vertical-align: baseline;
  text-decoration: none;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
  /* Remove the blue tap-highlight on mobile */
}

a:hover,
a:focus {
  text-decoration: underline;
}

a:hover,
a:focus,
a:active {
  outline: 0;
}

.block-link {
  display: block;
  overflow: hidden;
}

p {
  margin-top: 0;
  margin-bottom: 0.7em;
}

p:last-child {
  margin-bottom: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

img,
object,
iframe,
video {
  max-width: 100%;
  width: auto;
  height: auto;
}

.rich .figure[style*="float:left"],
.rich .figure[style*="float: left"] {
  margin: 0 10px 10px 0;
}

.rich .figure[style*="float:right"],
.rich .figure[style*="float: right"] {
  margin: 0 0 10px 10px;
}

.rich .figure dd {
  font-size: 14px;
  font-size: 1.4rem;
}

::-webkit-selection {
  background: #244057;
  color: white;
  text-shadow: none;
}

::-moz-selection {
  background: #244057;
  color: white;
  text-shadow: none;
}

::selection {
  background: #244057;
  color: white;
  text-shadow: none;
}

/* ==========================================================================
	STYLES (specific/common)
	========================================================================== */

/* ==========================================================================
	LAYOUT
	========================================================================== */

.content {
  max-width: 1020px;
  margin: 0 auto;
}

.left {
  float: left;
}

.right {
  float: right;
}

/* ==========================================================================
	MODULES
	========================================================================== */

/* import modules here, eg. _header.scss, _article.scss, etc... */

/* cookie-announcement */

.cookie-announcement {
  padding: 10px;
  color: #888888;
  background: #444444;
  text-align: center;
}

.cookie-announcement-inner {
  display: inline-block;
}

.cookie-announcement,
.cookie-announcement button {
  font-size: 13px;
  font-size: 1.3rem;
  line-height: 18px;
  font-style: normal;
  font-weight: normal;
}

.cookie-announcement a {
  text-decoration: underline;
  color: #888888;
}

.cookie-announcement a:hover,
.cookie-announcement a:focus {
  text-decoration: none;
}

.cookie-announcement p {
  margin: 0 0 20px;
}

.cookie-announcement button {
  display: inline-block;
  width: 23px;
  height: 23px;
  padding: 0;
  margin-left: 10px;
  background: #333333;
  color: #888888;
  border: 0;
  line-height: 22px;
  text-align: center;
  white-space: nowrap;
  border-radius: 50%;
}

.cookie-announcement button:hover,
.cookie-announcement button:focus {
  background: black;
  color: white;
}

/* cookie-info page */

.cookie-info {
  margin: 3em;
}

.cookie-info dl {
  border-top: 1px #cccccc solid;
  border-bottom: 1px #cccccc solid;
  padding: 1em 0 1em 0;
  margin: 3em 0;
}

.cookie-info dt {
  float: left;
  width: 200px;
  font-weight: bold;
  clear: left;
}

.cookie-info dd {
  float: left;
}

.cookie-info footer {
  margin-top: 3em;
}

/* ==========================================================================
	HELPERS - margin
	========================================================================== */

/* no margin */

.nm {
  margin: 0;
}

.nmb {
  margin-bottom: 0;
}

.nmt {
  margin-top: 0;
}

/* margin-top */

.mt {
  margin-top: 45px;
}

.mt--half {
  margin-top: 22.5px;
}

.mt--double {
  margin-top: 90px;
}

.mt--triple {
  margin-top: 135px;
}

.mt--quad {
  margin-top: 180px;
}

/* margin-bottom */

.mb {
  margin-bottom: 45px;
}

.mb--half {
  margin-bottom: 22.5px;
}

.mb--double {
  margin-bottom: 90px;
}

.mb--tripe {
  margin-bottom: 135px;
}

.mb--quad {
  margin-bottom: 180px;
}

/* pull-top */

.pt--quad {
  margin-top: -22.5px;
}

.pt--double {
  margin-top: -45px;
}

.pt--triple {
  margin-top: -67.5px;
}

.pt--quad {
  margin-top: -90px;
}

.pt--quad {
  margin-top: -45px;
}

.pt--double {
  margin-top: -90px;
}

.pt--triple {
  margin-top: -135px;
}

.pt--quad {
  margin-top: -180px;
}

/* padding */

.p--normal {
  padding: 67.5px 90px 45px 90px;
}

@media only screen and (max-width: 63.9375em) {
  .p--normal {
    padding: 33.75px 45px 22.5px 45px;
  }
}

@media only screen and (max-width: 39.9375em) {
  .p--normal {
    padding: 33.75px 15px 22.5px 15px;
  }
}

.p--normal--more-left {
  padding: 67.5px 90px 45px 180px;
}

@media only screen and (max-width: 63.9375em) {
  .p--normal--more-left {
    padding: 33.75px 45px 22.5px 90px;
  }
}

@media only screen and (max-width: 39.9375em) {
  .p--normal--more-left {
    padding: 33.75px 15px 22.5px 15px;
  }
}

.p--normal--more-right {
  padding: 67.5px 180px 45px 90px;
}

@media only screen and (max-width: 63.9375em) {
  .p--normal--more-right {
    padding: 33.75px 90px 22.5px 45px;
  }
}

@media only screen and (max-width: 39.9375em) {
  .p--normal--more-right {
    padding: 33.75px 15px 22.5px 15px;
  }
}

.p--extreme {
  padding: 67.5px 225px 67.5px 225px;
}

@media only screen and (max-width: 63.9375em) {
  .p--extreme {
    padding: 33.75px 112.5px 33.75px 112.5px;
  }
}

@media only screen and (max-width: 39.9375em) {
  .p--extreme {
    padding: 33.75px 15px 33.75px 15px;
  }
}

/* ==========================================================================
	HELPERS - color
	========================================================================== */

.color--white {
  color: white;
}

.color--black {
  color: black;
}

.bg--white {
  background: white;
}

.bg--black {
  background: black;
}

/* ==========================================================================
   HELPERS - other
   ========================================================================== */

.hidden {
  display: none !important;
  visibility: hidden !important;
}

.offscreen {
  position: absolute !important;
  left: -999em !important;
}

.invisible {
  visibility: hidden !important;
}

.clearfix {
  zoom: 1;
}

.clearfix:after {
  height: 0;
  visibility: hidden;
  display: block;
  clear: both;
  content: '';
}

/* Make sure Like buttons do not suffer from cut-off comment-box syndrome */

.fb_iframe_widget span {
  width: 450px !important;
}

/* Hide form field that should be left empty */

form .hp {
  display: none;
}

/* ==========================================================================
	PRINT
	========================================================================== */

@media print {
  /* Black prints faster: h5bp.com/s */

  /* Don't show links for images, or javascript/internal links */

  /* h5bp.com/t */

@page {
    margin: 0.5cm;
}

  * {
    background: transparent !important;
    color: black !important;
    text-shadow: none !important;
    -webkit-filter: none !important;
    filter: none !important;
    -ms-filter: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}