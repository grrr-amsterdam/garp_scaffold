[production]

; CDN
cdn.type = "local"
cdn.domain = ""
cdn.extensions = "jpg,jpeg,gif,png,zip,pdf,xls,xlsx,csv"
cdn.css.location = "local"
;cdn.js.location = "s3"
cdn.gzip = true

;cdn.type = 's3'
;cdn.domain = ""

;cdn.s3.apikey = ""
;cdn.s3.secret = ""
;cdn.s3.bucket = ""

cdn.path.upload.image = "/uploads/images"
cdn.path.upload.document = "/uploads/documents"
cdn.path.static.image = "/media/images"
cdn.path.static.document = "/documents"

; IMAGE TEMPLATES
; relative HTTP path to the dynamic image scaler, normally '/images/'
image.uri.dynamic = '/images/'
; filename to a GIF file in the local upload folder that acts as a replacement for missing remote images to be downloaded
image.filename.missingImage = '404.gif'
; default background color for images which canvases are larger than the content area
image.bgcolor = 'CCCCCC'

; scaling template configuration
image.setHtmlHeight = 1

image.template.cms_list.w = 64
image.template.cms_list.grow = 1
image.template.cms_list.richtextable = 0

image.template.cms_preview.w = 320
image.template.cms_preview.grow = 1
image.template.cms_preview.richtextable = 0

; VIDEO TEMPLATES
;video.template.w = 740
;video.template.h = 462

; JS
assets.js.root = "/js/build/prod"
assets.js.useModernizr = true

; CSS
assets.css.root = "/css/build/prod"
assets.sass.root = "/css/sass"

; ASSET MINIFICATION SETUP
assets.js.main_js.filename = "main.min.js"
assets.js.main_js.sourcefiles[] = "garp/front/styling.js"
assets.js.main_js.sourcefiles[] = "garp/front/flashmessage.js"
assets.js.main_js.sourcefiles[] = "garp/front/cookies.js"
assets.js.main_js.sourcefiles[] = "libs/fastclick.js"
assets.js.main_js.sourcefiles[] = "main.js"

cms.minifiedAssets = true
; Alas, we need this for backward compatibility:
cms.useVersionedJavascript = false

[staging : production]

cdn.domain = ""
cdn.type = "local"
cdn.css.location = "local"
cdn.path.upload.image = "/uploads/images"
cdn.path.upload.document = "/uploads/documents"

[integration : staging]

cdn.domain = ""
cdn.type = "local"
cdn.css.location = "local"

cdn.path.upload.image = "/uploads/images"
cdn.path.upload.document = "/uploads/documents"

[development : integration]

cdn.domain = "static.development.krakeling.nl"
cdn.type = "s3"
cdn.css.location = "local"
cdn.js.location = "local"

cdn.path.upload.image = "/uploads/private/images"
cdn.path.upload.document = "/uploads/private/documents"

assets.js.root = "/js/build/dev"
assets.css.root = "/css/build/dev"

[testing : development]
