{
  "name": "multi-ini",
  "version": "0.4.0",
  "description": "An ini-file parser which supports multi line, multiple levels and arrays to get a maximum of compatibility with Zend config files.",
  "main": "lib/multi-ini-class.js",
  "scripts": {
    "test": "grunt jasmine_node"
  },
  "homepage": "https://github.com/evangelion1204/multi-ini",
  "author": {
    "name": "Michael Geppert",
    "email": "evangelion1204@aol.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/evangelion1204/multi-ini.git"
  },
  "bugs": {
    "url": "https://github.com/evangelion1204/multi-ini/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/evangelion1204/grunt-lock/blob/master/LICENSE"
    }
  ],
  "keywords": [
    "ini",
    "zend",
    "config",
    "multi-line",
    "multi-level"
  ],
  "devDependencies": {
    "lodash": "^2.4.1",
    "grunt": "^0.4.2",
    "grunt-contrib-jasmine": "^0.6.1",
    "grunt-contrib-coffee": "^0.10.1",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-jasmine-node": "^0.1.0"
  },
  "dependencies": {
    "lodash": "^2.4.1"
  },
  "readme": "# multi-ini [![Build Status](https://travis-ci.org/evangelion1204/multi-ini.png?branch=master)](https://travis-ci.org/evangelion1204/multi-ini)\n\nAn ini-file parser which supports multi line, multiple levels and arrays to get a maximum of compatibility with Zend config files.\n\n## Install\n\n```shell\nnpm install multi-ini\n```\n\n## Usage\n\n```js\nini = require('multi-ini');\ncontent = ini.read(file);\ncontent.section.key = value;\nini.write(file, content);\n\n```\n\n## Options\n\nFollowing options are available:\n* encoding \\[*'utf8'*\\] - directly passed to readFileSync\n* keep_quotes \\[*false*\\] - does not strip quotes around values\n\n### Examples\n\n#### encoding\n\n```js\nini = require('multi-ini');\ncontent = ini.read(file, {encoding: 'utf8'});\ncontent.section.key = value;\nini.write(file, content, {encoding: 'utf8'});\n```\n\n#### keep_quotes\nThis option is by default off to be backward compatible, if you ever need the value containing the quotes then use this.\n```ini\nkey=\"value\"\n```\nEnabling this option will result in **\"value\"** instead of **value**.\n\n```js\nini = require('multi-ini');\ncontent = ini.read(file, {keep_quotes: false});\n```\n\n## Changelog\n\n### 0.4.0\n* Refactoring of the basic implementation to be no longer a singleton\n* Fixed a bug with wrong detected escaped double quotes\n\n### 0.2.5\nNow correctly reads\n```ini\nkey= example\n```\nto the value \"**example**\" instead of \"** example**\"\n\n### 0.2.4\nImplemented support for constants and removed a lot of bugs and the options **ignore_invalid** and **oninvalid**, this may be introduced again but are currently not necessary.\n\n### 0.2.3\nFixed a bug that the module was not recognized as a module by Node.",
  "readmeFilename": "README.md",
  "_id": "multi-ini@0.4.0",
  "dist": {
    "shasum": "24acc2e7af709650676c12cb5bb32201411b4071"
  },
  "_from": "multi-ini@",
  "_resolved": "https://registry.npmjs.org/multi-ini/-/multi-ini-0.4.0.tgz"
}
